@page "/streamings"

@inject IStringLocalizer<UI.Resources.Common> CommonLocalizer
@inject IStringLocalizer<Resources.Pages.Streamings.Index> Localizer

@attribute [Authorize]

<PageTitle>KITT - @Localizer[nameof(Resources.Pages.Streamings.Index.PageTitle)]</PageTitle>

<SectionContent SectionName="@SectionNames.PageTitleSectionName">
    @Localizer[nameof(Resources.Pages.Streamings.Index.PageTitle)]
</SectionContent>
<SectionContent SectionName="@SectionNames.ToolbarSectionName">
    <FluentAnchor Appearance="Appearance.Accent"
                  Href="streamings/schedule">
        @Localizer[nameof(Resources.Pages.Streamings.Index.ScheduleNewStreamingLabel)]
    </FluentAnchor>
    <FluentAnchor Appearance="Appearance.Accent"
                  Href="streamings/import">
        @Localizer[nameof(Resources.Pages.Streamings.Index.ImportStreamingLabel)]
    </FluentAnchor>
</SectionContent>

<FluentStack Class="mb-3">
    <EditForm Model="query" OnValidSubmit="SearchAsync" id="streamingSearchForm" style="width:100%;">
        <DataAnnotationsValidator />

        <FluentGrid>
            <FluentGridItem xs="12" md="2">
                <FluentSelect TOption="Option<StreamingQueryModel.SortDirection>"
                              Items="directions"
                              OptionValue="@(s => s.Value.ToString())"
                              OptionText="@(s => s.Text)"
                              Label="@Localizer[nameof(Resources.Pages.Streamings.Index.StreamingQueryOrderLabel)]"
                              Value="@query.ScheduleSort.ToString()"
                              ValueChanged="@(value => query.ScheduleSort = Enum.Parse<StreamingQueryModel.SortDirection>(value))"
                              Appearance="Appearance.Filled"
                              Style="width:100%; min-width:auto;" />
                <FluentValidationMessage For="@(() => query.ScheduleSort)" />
            </FluentGridItem>
            <FluentGridItem xs="12" md="5">
                <FluentTextField Label="@Localizer[nameof(Resources.Pages.Streamings.Index.TitleLabel)]"
                                 @bind-Value="query.Query"
                                 Appearance="FluentInputAppearance.Filled"
                                 Style="width:100%;" />
                <FluentValidationMessage For="@(() => query.Query)" />
            </FluentGridItem>
            <FluentGridItem xs="12" md="2">
                <FluentSelect TOption="Option<int>"
                              Items="sizes"
                              OptionValue="@(s => s.Value.ToString())"
                              OptionText="@(s => s.Text)"
                              Value="@query.Size.ToString()"
                              ValueChanged="@(value => query.Size = int.Parse(value))"
                              Label="@Localizer[nameof(Resources.Pages.Streamings.Index.StreamingQuerySizeLabel)]"
                              Appearance="Appearance.Filled"
                              Style="width:100%;min-width:auto;" />
            </FluentGridItem>
            <FluentGridItem xs="12" md="2">
                <FluentStack Orientation="Orientation.Horizontal"
                             HorizontalAlignment="HorizontalAlignment.End"
                             VerticalAlignment="VerticalAlignment.Bottom"
                             Style="height:100%;">
                    <FluentButton Type="ButtonType.Submit"
                                  Appearance="Appearance.Accent"
                                  IconStart="@(new Icons.Regular.Size20.Search())">
                        @Localizer[nameof(Resources.Pages.Streamings.Index.SearchButtonLabel)]
                    </FluentButton>
                    <FluentButton Appearance="Appearance.Outline"
                                  OnClick="ClearSearchAsync">
                        <FluentIcon Value="@(new Icons.Regular.Size20.Dismiss())" Color="Color.Accent" />
                    </FluentButton>
                </FluentStack>
            </FluentGridItem>
        </FluentGrid>
    </EditForm>
</FluentStack>
<FluentDivider />

<FluentDataGrid Items="streamings"
                Loading="loading">
    <EmptyContent>
        <FluentLabel>@Localizer[nameof(Resources.Pages.Streamings.Index.NoStreamingsFoundLabel)]</FluentLabel>
    </EmptyContent>
    <LoadingContent>
        <FluentProgress />
    </LoadingContent>
    <ChildContent>
        <PropertyColumn Property="@(s => s.Title)" Title="@Localizer[nameof(Resources.Pages.Streamings.Index.TitleLabel)]" />
        <PropertyColumn Property="@(s => s.ScheduledOn.ToShortDateString())" Title="@Localizer[nameof(Resources.Pages.Streamings.Index.DateLabel)]" />
        <TemplateColumn Context="streaming" Title="@Localizer[nameof(Resources.Pages.Streamings.Index.DurationLabel)]">
            @streaming.StartingTime.ToString("HH\\:mm") - @streaming.EndingTime.ToString("HH\\:mm")
        </TemplateColumn>
        <TemplateColumn Context="streaming" Title="@Localizer[nameof(Resources.Pages.Streamings.Index.TwitchLinkLabel)]">
            <a href="@streaming.HostingChannelUrl" target="_blank">@streaming.HostingChannelUrl</a>
        </TemplateColumn>
        <TemplateColumn Context="streaming" Title="@Localizer[nameof(Resources.Pages.Streamings.Index.YoutubeVideoUrlLabel)]">
            @if (string.IsNullOrWhiteSpace(streaming.YouTubeVideoUrl))
            {
                <span>-</span>
            }
            else
            {
                <a href="@streaming.YouTubeVideoUrl" target="_blank">@streaming.YouTubeVideoUrl</a>
            }
        </TemplateColumn>
        <TemplateColumn Context="streaming">
            <FluentStack Orientation="Orientation.Horizontal"
                         VerticalAlignment="VerticalAlignment.Center"
                         HorizontalAlignment="HorizontalAlignment.End">
                <FluentButton Appearance="Appearance.Accent"
                              OnClick="@(() => OpenStreamingDetailPage(streaming))"
                              aria-label="@CommonLocalizer[nameof(UI.Resources.Common.View)]"
                              Id="@($"openStreamingDetail-{streaming.Id}")">
                    <FluentIcon Color="Color.Fill" Value="@(new Icons.Filled.Size20.Eye())" />
                </FluentButton>
                <FluentTooltip Anchor="@($"openStreamingDetail-{streaming.Id}")">@CommonLocalizer[nameof(UI.Resources.Common.View)]</FluentTooltip>

                <FluentButton Appearance="Appearance.Outline"
                              OnClick="@(() => DeleteStreaming(streaming))"
                              aria-label="@CommonLocalizer[nameof(UI.Resources.Common.Delete)]"
                              Id="@($"deleteStreaming-{streaming.Id}")">
                    <FluentIcon Value="@(new Icons.Filled.Size20.Delete())" />
                </FluentButton>
                <FluentTooltip Anchor="@($"deleteStreaming-{streaming.Id}")">@CommonLocalizer[nameof(UI.Resources.Common.Delete)]</FluentTooltip>
            </FluentStack>
        </TemplateColumn>
    </ChildContent>
</FluentDataGrid>

<FluentPaginator State="paginationState"
                 CurrentPageIndexChanged="OnPageChangedAsync">
    <SummaryTemplate>
        @Localizer[nameof(Resources.Pages.Streamings.Index.PaginationItemsNumberText), paginationState.TotalItemCount!]
    </SummaryTemplate>
    <PaginationTextTemplate>
        @Localizer[nameof(Resources.Pages.Streamings.Index.PageNumberLabel), query.Page, numberOfPages]
    </PaginationTextTemplate>
</FluentPaginator>
