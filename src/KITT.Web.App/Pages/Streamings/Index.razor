@page "/streamings"

@inject IStringLocalizer<UI.Resources.Common> CommonLocalizer
@inject IStringLocalizer<Resources.Pages.Streamings.Index> Localizer

@attribute [Authorize]

<PageTitle>KITT - @Localizer[nameof(Resources.Pages.Streamings.Index.PageTitle)]</PageTitle>

<SectionContent SectionName="@SectionNames.PageTitleSectionName">
    @Localizer[nameof(Resources.Pages.Streamings.Index.PageTitle)]
</SectionContent>
<SectionContent SectionName="@SectionNames.ToolbarSectionName">
    <FluentAnchor Appearance="Appearance.Accent"
                  Href="streamings/schedule">
        @Localizer[nameof(Resources.Pages.Streamings.Index.ScheduleNewStreamingLabel)]
    </FluentAnchor>
    <FluentAnchor Appearance="Appearance.Accent"
                  Href="streamings/import">
        @Localizer[nameof(Resources.Pages.Streamings.Index.ImportStreamingLabel)]
    </FluentAnchor>
</SectionContent>

<FluentStack Style="margin-bottom:0.5rem;">
    <EditForm Model="query" OnValidSubmit="SearchAsync" id="streamingSearchForm" style="width:100%;">
        <DataAnnotationsValidator />

        <FluentGrid>
            <FluentGridItem xs="12" md="2">
                <FluentSelect TOption="Option<StreamingQueryModel.SortDirection>"
                              Items="directions"
                              OptionValue="@(s => s.Value.ToString())"
                              OptionText="@(s => s.Text)"
                              Label="@Localizer[nameof(Resources.Pages.Streamings.Index.StreamingQueryOrderLabel)]"
                              Value="@query.ScheduleSort.ToString()"
                              ValueChanged="@(value => query.ScheduleSort = Enum.Parse<StreamingQueryModel.SortDirection>(value))"
                              Appearance="Appearance.Filled"
                              Style="width:100%; min-width:auto;">
                    @foreach (var sort in Enum.GetValues<StreamingQueryModel.SortDirection>())
                    {
                        <FluentOption TOption="StreamingQueryModel.SortDirection" Value="@sort.ToString()">@Localizer[sort.ToString()]</FluentOption>
                    }
                </FluentSelect>
                <FluentValidationMessage For="@(() => query.ScheduleSort)" />
            </FluentGridItem>
            <FluentGridItem xs="12" md="5">
                <FluentTextField Label="@Localizer[nameof(Resources.Pages.Streamings.Index.TitleLabel)]"
                                 @bind-Value="query.Query"
                                 Appearance="FluentInputAppearance.Filled"
                                 Style="width:100%;" />
                <FluentValidationMessage For="@(() => query.Query)" />
            </FluentGridItem>
            <FluentGridItem xs="12" md="2">
                <FluentSelect TOption="Option<int>"
                              Items="sizes"
                              OptionValue="@(s => s.Value.ToString())"
                              OptionText="@(s => s.Text)"
                              Value="@query.Size.ToString()"
                              ValueChanged="@(value => query.Size = int.Parse(value))"
                              Label="@Localizer[nameof(Resources.Pages.Streamings.Index.StreamingQuerySizeLabel)]"
                              Appearance="Appearance.Filled"
                              Style="width:100%;min-width:auto;" />
            </FluentGridItem>
            <FluentGridItem xs="12" md="2">
                <FluentStack Orientation="Orientation.Horizontal"
                             HorizontalAlignment="HorizontalAlignment.End"
                             VerticalAlignment="VerticalAlignment.Bottom"
                             Style="height:100%;">
                    <FluentButton Type="ButtonType.Submit"
                                  Appearance="Appearance.Accent"
                                  IconStart="@(new Icons.Regular.Size20.Search())">
                        @Localizer[nameof(Resources.Pages.Streamings.Index.SearchButtonLabel)]
                    </FluentButton>
                    <FluentButton Appearance="Appearance.Outline">
                        <FluentIcon Value="@(new Icons.Regular.Size20.Dismiss())" Color="Color.Accent" />
                    </FluentButton>
                </FluentStack>
            </FluentGridItem>
        </FluentGrid>
    </EditForm>
</FluentStack>
<FluentDivider />

<FluentDataGrid Items="streamings"
                Loading="loading">
    <EmptyContent>
        <FluentLabel>@Localizer[nameof(Resources.Pages.Streamings.Index.NoStreamingsFoundLabel)]</FluentLabel>
    </EmptyContent>
    <LoadingContent>
        <FluentProgress />
    </LoadingContent>
    <ChildContent>
        <PropertyColumn Property="@(s => s.Title)" Title="@Localizer[nameof(Resources.Pages.Streamings.Index.TitleLabel)]" />
        <PropertyColumn Property="@(s => s.ScheduledOn.ToShortDateString())" Title="@Localizer[nameof(Resources.Pages.Streamings.Index.DateLabel)]" />
        <TemplateColumn Context="streaming" Title="@Localizer[nameof(Resources.Pages.Streamings.Index.DurationLabel)]">
            @streaming.StartingTime.ToString("HH\\:mm") - @streaming.EndingTime.ToString("HH\\:mm")
        </TemplateColumn>
        <TemplateColumn Context="streaming" Title="@Localizer[nameof(Resources.Pages.Streamings.Index.TwitchLinkLabel)]">
            <a href="@streaming.HostingChannelUrl" target="_blank">@streaming.HostingChannelUrl</a>
        </TemplateColumn>
        <TemplateColumn Context="streaming" Title="@Localizer[nameof(Resources.Pages.Streamings.Index.YoutubeVideoUrlLabel)]">
            @if (string.IsNullOrWhiteSpace(streaming.YouTubeVideoUrl))
            {
                <span>-</span>
            }
            else
            {
                <a href="@streaming.YouTubeVideoUrl" target="_blank">@streaming.YouTubeVideoUrl</a>
            }
        </TemplateColumn>
        <TemplateColumn Context="streaming">
            <FluentStack Orientation="Orientation.Horizontal"
                         VerticalAlignment="VerticalAlignment.Center"
                         HorizontalAlignment="HorizontalAlignment.End">
                <FluentAnchor Appearance="Appearance.Accent"
                              Href="@($"streamings/{streaming.Id}")">
                    <FluentIcon Slot="start" Value="@(new Icons.Filled.Size20.Eye())" Color="Color.Fill"></FluentIcon>
                    @CommonLocalizer[nameof(UI.Resources.Common.View)]
                </FluentAnchor>
                <FluentButton Appearance="Appearance.Accent"
                              IconStart="@(new Icons.Filled.Size20.Delete())"
                              OnClick="@(() => DeleteStreaming(streaming))"
                              aria-label="@CommonLocalizer[nameof(UI.Resources.Common.Delete)]"/>
            </FluentStack>
        </TemplateColumn>
    </ChildContent>
</FluentDataGrid>

<FluentPaginator State="paginationState"
                 CurrentPageIndexChanged="OnPageChangedAsync">
    <SummaryTemplate>
        @Localizer[nameof(Resources.Pages.Streamings.Index.PaginationItemsNumberText), paginationState.TotalItemCount!]
    </SummaryTemplate>
    <PaginationTextTemplate>
        @Localizer[nameof(Resources.Pages.Streamings.Index.PageNumberLabel), query.Page, numberOfPages]
    </PaginationTextTemplate>
</FluentPaginator>

@*<PageLayout PageTitle="@Localizer[nameof(Resources.Pages.Streamings.Index.PageTitle)]">
    <Toolbar>
        <FluentAnchor Appearance="Appearance.Accent"
                      Href="streamings/schedule">
            @Localizer[nameof(Resources.Pages.Streamings.Index.ScheduleNewStreamingLabel)]
        </FluentAnchor>
        <FluentAnchor Appearance="Appearance.Accent"
                      Href="streamings/import">
            @Localizer[nameof(Resources.Pages.Streamings.Index.ImportStreamingLabel)]
        </FluentAnchor>

        <MudButtonGroup Color="Color.Primary" Variant="Variant.Filled">
                <NavButton Label="@Localizer[nameof(Resources.Pages.Streamings.Index.ScheduleNewStreamingLabel)]"
                           Page="streamings/schedule" />

                <NavButton Label="@Localizer[nameof(Resources.Pages.Streamings.Index.ImportStreamingLabel)]"
                           Page="streamings/import" />
            </MudButtonGroup>
    </Toolbar>
    <PageContent>
        <FluentStack Style="margin-bottom:0.5rem;">
            <EditForm Model="query" OnValidSubmit="SearchAsync" id="streamingSearchForm" style="width:100%;">
                <DataAnnotationsValidator />

                <FluentGrid>
                    <FluentGridItem xs="12" md="3">
                        <FluentSelect TOption="Option<StreamingQueryModel.SortDirection>"
                                      Items="directions"
                                      OptionValue="@(s => s.Value.ToString())"
                                      OptionText="@(s => s.Text)"
                                      Label="@Localizer[nameof(Resources.Pages.Streamings.Index.StreamingQueryOrderLabel)]"
                                      Value="@query.ScheduleSort.ToString()"
                                      ValueChanged="@(value => query.ScheduleSort = Enum.Parse<StreamingQueryModel.SortDirection>(value))"
                                      Appearance="Appearance.Filled"
                                      Style="width:100%; min-width:auto;">
                            @foreach (var sort in Enum.GetValues<StreamingQueryModel.SortDirection>())
                            {
                                <FluentOption TOption="StreamingQueryModel.SortDirection" Value="@sort.ToString()">@Localizer[sort.ToString()]</FluentOption>
                            }
                        </FluentSelect>
                        <FluentValidationMessage For="@(() => query.ScheduleSort)" />
                    </FluentGridItem>
                    <FluentGridItem xs="12" md="5">
                        <FluentTextField Label="@Localizer[nameof(Resources.Pages.Streamings.Index.TitleLabel)]"
                                         @bind-Value="query.Query"
                                         Appearance="FluentInputAppearance.Filled"
                                         Style="width:100%;" />
                        <FluentValidationMessage For="@(() => query.Query)" />
                    </FluentGridItem>
                    <FluentGridItem xs="12" md="2">
                        <FluentSelect TOption="Option<int>"
                                      Items="sizes"
                                      OptionValue="@(s => s.Value.ToString())"
                                      OptionText="@(s => s.Text)"
                                      Value="@query.Size.ToString()"
                                      ValueChanged="@(value => query.Size = int.Parse(value))"
                                      Label="@Localizer[nameof(Resources.Pages.Streamings.Index.StreamingQuerySizeLabel)]"
                                      Appearance="Appearance.Filled"
                                      Style="width:100%;min-width:auto;" />
                    </FluentGridItem>
                    <FluentGridItem xs="12" md="2">
                        <FluentStack Orientation="Orientation.Horizontal"
                                     HorizontalAlignment="HorizontalAlignment.End"
                                     VerticalAlignment="VerticalAlignment.Bottom"
                                     Style="height:100%;">
                            <FluentButton Type="ButtonType.Submit"
                                          Appearance="Appearance.Accent"
                                          IconStart="@(new Icons.Regular.Size20.Search())">
                                Search
                            </FluentButton>
                            <FluentButton Appearance="Appearance.Outline">
                                <FluentIcon Value="@(new Icons.Regular.Size20.Dismiss())" Color="Color.Accent" />
                            </FluentButton>
                        </FluentStack>
                    </FluentGridItem>
                </FluentGrid>
            </EditForm>
        </FluentStack>
        <FluentDivider />


        <MudPaper Class="mb-3 px-2">
                <EditForm Model="query" OnValidSubmit="SearchAsync" id="streamingSearchForm">
                    <DataAnnotationsValidator />

                    <MudGrid>
                        <MudItem xs="12" md="3">
                            <MudSelect T="StreamingQueryModel.SortDirection"
                                       Variant="Variant.Outlined"
                                       Label="@Localizer[nameof(Resources.Pages.Streamings.Index.StreamingQueryOrderLabel)]"
                                       @bind-Value="query.ScheduleSort"
                                       Strict="true"
                                       AnchorOrigin="Origin.BottomCenter"
                                       Dense="true"
                                       Margin="Margin.Dense">
                                @foreach (var sort in Enum.GetValues<StreamingQueryModel.SortDirection>())
                                {
                                    <MudSelectItem T="StreamingQueryModel.SortDirection" Value="sort">@Localizer[sort.ToString()]</MudSelectItem>
                                }
                            </MudSelect>
                        </MudItem>
                        <MudItem xs="12" md="5">
                            <MudTextField Margin="Margin.Dense"
                                          Label="@Localizer[nameof(Resources.Pages.Streamings.Index.TitleLabel)]"
                                          @bind-Value="query.Query"
                                          Variant="Variant.Outlined" />
                        </MudItem>
                        <MudItem xs="12" md="2">
                            <MudSelect @bind-Value="query.Size"
                                       Label="@Localizer[nameof(Resources.Pages.Streamings.Index.StreamingQuerySizeLabel)]"
                                       Strict="true"
                                       AnchorOrigin="Origin.BottomCenter"
                                       Dense="true"
                                       Margin="Margin.Dense"
                                       Variant="Variant.Outlined">
                                @foreach (var size in sizes)
                                {
                                    <MudSelectItem Value="size">@size</MudSelectItem>
                                }
                            </MudSelect>
                        </MudItem>
                        <MudItem xs="12" md="2">
                            <MudButtonGroup Color="Color.Primary" Variant="Variant.Filled">
                                <MudIconButton ButtonType="ButtonType.Submit" Icon="@Icons.Material.Filled.Search" />
                                <MudIconButton OnClick="ClearSearchAsync" Icon="@Icons.Material.Filled.Clear" Variant="Variant.Outlined" />
                            </MudButtonGroup>
                        </MudItem>
                    </MudGrid>
                </EditForm>
            </MudPaper>
            <MudDivider />

            <MudPaper>
                <MudTable Items="model.Items" Loading="loading" Striped="true" RowsPerPage="query.Size">
                    <HeaderContent>
                        <MudTh>@Localizer[nameof(Resources.Pages.Streamings.Index.TitleLabel)]</MudTh>
                        <MudTh>@Localizer[nameof(Resources.Pages.Streamings.Index.DateLabel)]</MudTh>
                        <MudTh>@Localizer[nameof(Resources.Pages.Streamings.Index.DurationLabel)]</MudTh>
                        <MudTh>@Localizer[nameof(Resources.Pages.Streamings.Index.TwitchLinkLabel)]</MudTh>
                        <MudTh>@Localizer[nameof(Resources.Pages.Streamings.Index.YoutubeVideoUrlLabel)]</MudTh>
                        <MudTh>&nbsp;</MudTh>
                    </HeaderContent>
                    <RowTemplate>
                        <MudTd>@context.Title</MudTd>
                        <MudTd>@context.ScheduledOn.ToShortDateString()</MudTd>
                        <MudTd>@context.StartingTime.ToString("HH\\:mm") - @context.EndingTime.ToString("HH\\:mm")</MudTd>
                        <MudTd><a href="@context.HostingChannelUrl" target="_blank">@context.HostingChannelUrl</a></MudTd>
                        <MudTd>
                            @if (string.IsNullOrWhiteSpace(context.YouTubeVideoUrl))
                            {
                                <span>-</span>
                            }
                            else
                            {
                                <a href="@context.YouTubeVideoUrl" target="_blank">@context.YouTubeVideoUrl</a>
                            }
                        </MudTd>
                        <MudTd>
                            <MudButtonGroup Color="Color.Primary" Variant="Variant.Outlined">
                                <MudButton id="@($"openStreamingDetail-{context.Id}")" StartIcon="@Icons.Material.Filled.RemoveRedEye" OnClick="() => OpenStreamingDetail(context)">@CommonLocalizer[nameof(UI.Resources.Common.View)]</MudButton>
                                <MudButton id="@($"deleteStreaming-{context.Id}")" StartIcon="@Icons.Material.Filled.Delete" OnClick="() => DeleteStreaming(context)">@CommonLocalizer[nameof(UI.Resources.Common.Delete)]</MudButton>
                            </MudButtonGroup>
                        </MudTd>
                    </RowTemplate>
                    <NoRecordsContent>
                        <MudText>@Localizer[nameof(Resources.Pages.Streamings.Index.NoStreamingsFoundLabel)]</MudText>
                    </NoRecordsContent>
                    <LoadingContent>
                        <MudProgressCircular Color="Color.Primary"
                                             Indeterminate="true"
                                             Size="Size.Large" />
                    </LoadingContent>
                    <PagerContent>
                        @if (model.Items.Any() && numberOfPages > 1)
                        {
                            <div class="py-2 px-4 mt-2 mb-2 d-flex align-center flex-row-reverse">
                                <MudPagination Count="numberOfPages"
                                               Variant="Variant.Filled"
                                               Rectangular="true"
                                               ShowFirstButton="true"
                                               ShowLastButton="true"
                                               SelectedChanged="OnPageChangedAsync"
                                               BoundaryCount="1"
                                               MiddleCount="2"/>
                                <span class="mr-2">@Localizer[nameof(Resources.Pages.Streamings.Index.PaginationItemsNumberText), model.Items.Count(), model.TotalItems]</span>
                            </div>
                        }
                    </PagerContent>
                </MudTable>
            </MudPaper>
    </PageContent>
</PageLayout>*@
