@inject NavigationManager Navigation

<AuthorizeView>
    <Authorized>
        <FluentStack HorizontalAlignment="HorizontalAlignment.End"
                     VerticalAlignment="VerticalAlignment.Center">
            <FluentProfileMenu Initials="@context.User.Identity!.Name!.First().ToString().ToUpper()"
                               Status="PresenceStatus.Available"
                               FullName="@context.User.Identity!.Name"
                               EMail="@GetUserEmailAddress(context.User)"
                               OnHeaderButtonClick="BeginSignOut" />
        </FluentStack>

        @*<MudMenu>
                <ActivatorContent>
                    <MudAvatar Color="Color.Info">@context.User.Identity!.Name!.First().ToString().ToUpper()</MudAvatar>
                </ActivatorContent>
                <ChildContent>
                    <MudListItem Text="Logout" OnClick="BeginSignOut"/>
                </ChildContent>
            </MudMenu>*@
    </Authorized>
    <NotAuthorized>
        <a href="authentication/login">Log in</a>
    </NotAuthorized>
</AuthorizeView>

@code{
    private void BeginSignOut(/*MouseEventArgs args*/)
    {
        Navigation.NavigateToLogout("authentication/logout");
    }

    private string GetUserEmailAddress(System.Security.Claims.ClaimsPrincipal user)
    {
        var emails = user.FindFirst(c => c.Type == "emails")?.Value ?? string.Empty;
        if (string.IsNullOrEmpty(emails))
        {
            return string.Empty;
        }

        return System.Text.Json.JsonSerializer.Deserialize<string[]>(emails)?.FirstOrDefault() ?? string.Empty;
    }
}