# Run when commits are pushed to 109-road-to-aspire
on:
  workflow_dispatch:
  push:
    # Run when commits are pushed to mainline branch (main or master)
    # Set this to the mainline branch you are using
    branches:
      - main

# Set up permissions for deploying with secretless Azure federated credentials
# https://learn.microsoft.com/en-us/azure/developer/github/connect-from-azure?tabs=azure-portal%2Clinux#set-up-azure-login-with-openid-connect-authentication
permissions:
  id-token: write
  contents: read

env:
  DOTNET_VERSION: 9.0.x

jobs:
  update-database:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    - name: Install Entity Framework Core tools
      run: |
          dotnet new tool-manifest
          dotnet tool install dotnet-ef
    - name: Generate SQL script
      run: dotnet ef migrations script --idempotent -p ./src/KITT.Core/KITT.Core.csproj -s ./src/KITT.Support.Seeder/KITT.Support.Seeder.csproj  -o ./scripts/update-database.sql
    - name: Azure login
      uses: Azure/login@v1
      with: 
        creds: ${{ secrets.KITT_SQL_AZURE_CREDENTIALS }}
    - name: Update Database
      uses: Azure/sql-action@v2
      with:
        connection-string: ${{ secrets.AZURE_KITT_DATABASE }}
        path: ./scripts/update-database.sql
  build:
    runs-on: ubuntu-latest
    env:
      AZURE_CLIENT_ID: ${{ vars.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ vars.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}
      AZURE_ENV_NAME: ${{ vars.AZURE_ENV_NAME }}
      AZURE_LOCATION: ${{ vars.AZURE_LOCATION }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install azd
        uses: Azure/setup-azd@v2
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: | 
            8.x.x
            9.x.x

      - name: Log in with Azure (Federated Credentials)
        run: |
          azd auth login `
            --client-id "$Env:AZURE_CLIENT_ID" `
            --federated-credential-provider "github" `
            --tenant-id "$Env:AZURE_TENANT_ID"
        shell: pwsh


      - name: Provision Infrastructure
        run: azd provision --no-prompt
        env:
          AZURE_WEB_APP_ID: ${{ secrets.AZURE_WEB_APP_ID }}
          AZURE_WEB_APP_SECRET: ${{ secrets.AZURE_WEB_APP_SECRET }}
          AZURE_ENTRA_ID_TENANT_ID: ${{ secrets.AZURE_ENTRA_ID_TENANT_ID }}
          AZURE_KITT_DATABASE: ${{ secrets.AZURE_KITT_DATABASE }}
          AZURE_CMS_API_APP_ID: ${{ secrets.AZURE_CMS_API_APP_ID }}
          AZURE_ENTRA_ID_DOMAIN_NAME: ${{ secrets.AZURE_ENTRA_ID_DOMAIN_NAME }}
          AZURE_PROPOSALS_API_APP_ID: ${{ secrets.AZURE_PROPOSALS_API_APP_ID }}

      - name: Deploy Application
        run: azd deploy --no-prompt
        env:
          AZURE_WEB_APP_ID: ${{ secrets.AZURE_WEB_APP_ID }}
          AZURE_WEB_APP_SECRET: ${{ secrets.AZURE_WEB_APP_SECRET }}
          AZURE_ENTRA_ID_TENANT_ID: ${{ secrets.AZURE_ENTRA_ID_TENANT_ID }}
          AZURE_KITT_DATABASE: ${{ secrets.AZURE_KITT_DATABASE }}
          AZURE_CMS_API_APP_ID: ${{ secrets.AZURE_CMS_API_APP_ID }}
          AZURE_ENTRA_ID_DOMAIN_NAME: ${{ secrets.AZURE_ENTRA_ID_DOMAIN_NAME }}
          AZURE_PROPOSALS_API_APP_ID: ${{ secrets.AZURE_PROPOSALS_API_APP_ID }}
        
